{"version":3,"sources":["Display.js","Controller.js","CopyButton.js","App.js","reportWebVitals.js","index.js"],"names":["Display","message","className","Controller","isCapital","isSymbol","checkChange","f","textSize","sizeChange","TextField","id","label","variant","select","helperText","value","onChange","event","target","map","sizeValue","i","MenuItem","FormControlLabel","control","Switch","checked","name","color","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","CopyButton","msg","React","open","setOpen","text","Button","size","onClick","Modal","onClose","Box","sx","Typography","component","mt","Generator","passlength","symbol","capital","letter","symbolSample","Math","floor","random","length","capitalSample","password","Array","join","includes","App","useState","state","setState","AppBar","Toolbar","flexGrow","handleValue","newState","sta","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.437a1e49.chunk.js","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default function Display({message}){\r\n    return(\r\n        <div className=\"row\">\r\n            <div className=\"col-sm-1\"></div>\r\n            <div className=\"col-sm-10\">\r\n                <h1 className=\"display\">{message}</h1>\r\n            </div>\r\n            <div className=\"col-sm-1\"></div>\r\n        </div>\r\n    );\r\n}","import \"./controller.css\";\r\nimport Switch from '@mui/material/Switch';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport { MenuItem, TextField } from '@mui/material';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default function Controller({isCapital=false,isSymbol=false,checkChange=f=>f,textSize=12,sizeChange=f=>f}){\r\n    const sizeValues=[8,12,16,24,30,40,50]\r\n    return(\r\n        <div className=\"controller\">\r\n            <div className='row'>\r\n                        <div className=\"col-sm-7\">\r\n                            <TextField id=\"outlined-basic\" label=\"パスワードのサイズ\" variant=\"outlined\" select helperText=\"パスワードのサイズ(文字数)を選択してください\"\r\n                            value={textSize} onChange={(event)=>sizeChange(event.target.value)}>\r\n                                {sizeValues.map((sizeValue,i)=>(\r\n                                    <MenuItem key={i} value={sizeValue}>\r\n                                        {sizeValue}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                        </div>\r\n                        <div className=\"col-sm-5\">\r\n                            <FormControlLabel control={<Switch checked={isCapital} onChange={(event)=>checkChange(event.target.name)} color=\"primary\" name=\"isCapital\"/>} label=\"大文字を使用\"/>\r\n                            <FormControlLabel control={<Switch checked={isSymbol} onChange={(event)=>checkChange(event.target.name)} color=\"primary\" name=\"isSymbol\"/>} label=\"記号を使用\"/>\r\n                        </div>\r\n            </div>\r\n        </div>       \r\n    );\r\n}","import * as React from 'react';\r\nimport {Box, Typography, Modal, Button} from '@mui/material';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n  \r\nexport default function CopyButton({msg}){\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    return(\r\n        <div className=\"row\">\r\n            <div className=\"col-sm-3\"></div>\r\n            <div className=\"col-sm-6\" id=\"copyButton\">\r\n            <CopyToClipboard text={msg}>\r\n                <Button variant=\"contained\" size=\"large\" onClick={handleOpen}>Copy</Button>\r\n            </CopyToClipboard>\r\n            </div>\r\n            <div className=\"col-sm-3\">\r\n            <Modal\r\n    open={open}\r\n     onClose={handleClose}\r\n    aria-labelledby=\"modal-modal-title\"\r\n    aria-describedby=\"modal-modal-description\"\r\n            >\r\n    <Box sx={style}>\r\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n          Passwordはコピーされました！\r\n     </Typography>\r\n     <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n          出来たPasswordをお使いください。\r\n        </Typography>\r\n    </Box>\r\n    </Modal></div>            \r\n        </div>\r\n    );\r\n}","import './App.css';\r\nimport Display from './Display';\r\nimport Controller from './Controller';\r\nimport CopyButton from './CopyButton';\r\nimport React,{ useState } from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction Generator(isCapital=false,isSymbol=false,passlength=12){\r\n  const symbol=\"!#$%&()\";   //Symbol\r\n  const capital=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"; //Capital\r\n  const letter=isCapital&&isSymbol? \"abcdefghijklmnopqrstuvwxyz0123456789\"+symbol+capital\r\n              :isCapital? \"abcdefghijklmnopqrstuvwxyz0123456789\"+capital\r\n              :isSymbol ? \"abcdefghijklmnopqrstuvwxyz0123456789\"+symbol\r\n              :\"abcdefghijklmnopqrstuvwxyz0123456789\"\r\n        //To prepare using letters\r\n\r\n  const symbolSample=symbol[Math.floor(Math.random()*symbol.length)]; //To judge includes symbol\r\n  const capitalSample=capital[Math.floor(Math.random()*capital.length)];  //To judge includes capital\r\n\r\n  let password=[...Array(passlength)].map(()=>letter[Math.floor(Math.random()*letter.length)]).join(\"\");  //Make password\r\n\r\n  if(isCapital && isSymbol){\r\n    if(password.includes(capitalSample) && password.includes(symbolSample)){\r\n      return password;\r\n    }else{\r\n      return Generator(isCapital,isSymbol,passlength);\r\n    }\r\n  }else if(isCapital){\r\n    if(password.includes(capitalSample)){\r\n      return password;\r\n    }else{\r\n      return Generator(isCapital,isSymbol,passlength);\r\n    }\r\n  }else if(isSymbol){\r\n    if(password.includes(symbolSample)){\r\n      return password;\r\n    }else{\r\n      return Generator(isCapital,isSymbol,passlength);\r\n    }\r\n  }else{\r\n    return password;\r\n  }\r\n  //Judge includes capital, symbol\r\n}\r\n\r\nfunction App() {\r\n  //State\r\n  const[state,setState]=useState([\r\n    {\r\n      name:\"isCapital\",\r\n      value:true\r\n    },\r\n    {\r\n      name:\"isSymbol\",\r\n      value:true\r\n    },\r\n    {\r\n      name:\"passLength\",\r\n      value:12\r\n    }\r\n  ])\r\n\r\n  let password=Generator(state[0].value,state[1].value,state[2].value);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            Password Builder\r\n          </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </header>\r\n      <div className=\"App-main\">\r\n      <Display message={password}/>\r\n      <CopyButton msg={password}/>\r\n      </div>\r\n      <Controller isCapital={state[0].value} isSymbol={state[1].value} textSize={state[2].value}\r\n        checkChange={handleValue=>{\r\n          const newState=state.map(sta=>\r\n            sta.name===handleValue \r\n              ? {name:handleValue, value:!sta.value} \r\n              : sta\r\n            );\r\n            setState(newState);\r\n        }}\r\n        sizeChange={handleValue=>{\r\n          const newState=state.map(sta=>\r\n            sta.name===\"passLength\"\r\n              ?{name:\"passLength\",value:handleValue}\r\n              :sta\r\n            );\r\n            setState(newState);\r\n        }}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}