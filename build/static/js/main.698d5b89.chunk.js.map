{"version":3,"sources":["Display.js","Controller.js","App.js","reportWebVitals.js","index.js"],"names":["Display","message","className","Controller","isCapital","isSymbol","handleChange","f","TextField","id","label","variant","select","helperText","map","sizeValue","i","MenuItem","value","FormControlLabel","control","Switch","checked","onChange","name","Generator","passlength","symbol","capital","letter","symbolSample","Math","floor","random","length","capitalSample","password","Array","join","includes","App","useState","state","setState","stateName","newState","sta","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.698d5b89.chunk.js","sourcesContent":["export default function Display({message}){\r\n    return(\r\n        <h1 className=\"display\">{message}</h1>\r\n    );\r\n}","import \"./controller.css\";\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { MenuItem, TextField } from \"@material-ui/core\";\r\n\r\nexport default function Controller({isCapital=false,isSymbol=false,handleChange=f=>f}){\r\n    const sizeValues=[8,12,16,24,30,40,50]\r\n    return(\r\n        <div className=\"controller\">\r\n            <table>\r\n                <tbody>\r\n                <tr>\r\n                        <td>\r\n                            <TextField id=\"outlined-basic\" label=\"パスワードのサイズ\" variant=\"outlined\" select helperText=\"パスワードのサイズ(文字数)を選択してください\">\r\n                                {sizeValues.map((sizeValue,i)=>(\r\n                                    <MenuItem key={i} value={sizeValue}>\r\n                                        {sizeValue}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                            {/*<label htmlFor=\"textSize\">パスワードのサイズ</label>\r\n                            <input type=\"number\" name=\"textSize\" min=\"8\" max=\"50\"/>*/}\r\n                        </td>\r\n                        <td>\r\n                            <FormControlLabel control={<Switch checked={isCapital} onChange={()=>handleChange(\"isCapital\")} name=\"isCapital\"/>} label=\"大文字を使用\"/>\r\n                            {/*<button onClick={()=>handleChange(\"isCapital\")}>大文字を使用</button>*/}\r\n                        </td>\r\n                        <td>\r\n                            <FormControlLabel control={<Switch checked={isSymbol} onChange={()=>handleChange(\"isSymbol\")} name=\"isSymbol\"/>} label=\"記号を使用\"/>\r\n                            {/*<button onClick={()=>handleChange(\"isSymbol\")}>記号を使用</button>*/}\r\n                        </td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>       \r\n    );\r\n}","import './App.css';\nimport Display from './Display';\nimport Controller from './Controller';\nimport React,{ useState } from 'react';\n\nfunction Generator(isCapital=false,isSymbol=false,passlength=8){\n  const symbol=\"!#$%&()\";   //Symbol\n  const capital=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"; //Capital\n  const letter=isCapital&&isSymbol? \"abcdefghijklmnopqrstuvwxyz0123456789\"+symbol+capital\n              :isCapital? \"abcdefghijklmnopqrstuvwxyz0123456789\"+capital\n              :isSymbol ? \"abcdefghijklmnopqrstuvwxyz0123456789\"+symbol\n              :\"abcdefghijklmnopqrstuvwxyz0123456789\"\n        //To prepare using letters\n\n  const symbolSample=symbol[Math.floor(Math.random()*symbol.length)]; //To judge includes symbol\n  const capitalSample=capital[Math.floor(Math.random()*capital.length)];  //To judge includes capital\n\n  let password=[...Array(passlength)].map(()=>letter[Math.floor(Math.random()*letter.length)]).join(\"\");  //Make password\n\n  if(isCapital && isSymbol){\n    if(password.includes(capitalSample) && password.includes(symbolSample)){\n      return password;\n    }else{\n      return Generator(isCapital,isSymbol,passlength);\n    }\n  }else if(isCapital){\n    if(password.includes(capitalSample)){\n      return password;\n    }else{\n      return Generator(isCapital,isSymbol,passlength);\n    }\n  }else if(isSymbol){\n    if(password.includes(symbolSample)){\n      return password;\n    }else{\n      return Generator(isCapital,isSymbol,passlength);\n    }\n  }else{\n    return password;\n  }\n  //Judge includes capital, symbol\n}\n\nfunction App() {\n  //State\n  const[state,setState]=useState([\n    {\n      name:\"isCapital\",\n      value:true\n    },\n    {\n      name:\"isSymbol\",\n      value:true\n    },\n    {\n      name:\"passLength\",\n      value:12\n    }\n  ])\n\n  let password=Generator(state[0].value,state[1].value,state[2].value);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Display message={password}/>\n      </header>\n      <Controller isCapital={state[0].value} isSymbol={state[1].value}\n        handleChange={stateName=>{\n          const newState=state.map(sta=>\n            sta.name===stateName ? {name:stateName, value:!sta.value} : sta\n            );\n            setState(newState);\n        }}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}