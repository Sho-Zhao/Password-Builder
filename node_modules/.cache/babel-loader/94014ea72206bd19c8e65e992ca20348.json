{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\showt\\\\OneDrive\\\\\\u30C9\\u30AD\\u30E5\\u30E1\\u30F3\\u30C8\\\\GitHub\\\\Password-Builder\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Display from './Display';\nimport Controller from './Controller';\nimport CopyButton from './CopyButton';\nimport React, { useState } from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Generator(isCapital = false, isSymbol = false, passlength = 12) {\n  const symbol = \"!#$%&()\"; //Symbol\n\n  const capital = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"; //Capital\n\n  const letter = isCapital && isSymbol ? \"abcdefghijklmnopqrstuvwxyz0123456789\" + symbol + capital : isCapital ? \"abcdefghijklmnopqrstuvwxyz0123456789\" + capital : isSymbol ? \"abcdefghijklmnopqrstuvwxyz0123456789\" + symbol : \"abcdefghijklmnopqrstuvwxyz0123456789\"; //To prepare using letters\n\n  const symbolSample = symbol[Math.floor(Math.random() * symbol.length)]; //To judge includes symbol\n\n  const capitalSample = capital[Math.floor(Math.random() * capital.length)]; //To judge includes capital\n\n  let password = [...Array(passlength)].map(() => letter[Math.floor(Math.random() * letter.length)]).join(\"\"); //Make password\n\n  if (isCapital && isSymbol) {\n    if (password.includes(capitalSample) && password.includes(symbolSample)) {\n      return password;\n    } else {\n      return Generator(isCapital, isSymbol, passlength);\n    }\n  } else if (isCapital) {\n    if (password.includes(capitalSample)) {\n      return password;\n    } else {\n      return Generator(isCapital, isSymbol, passlength);\n    }\n  } else if (isSymbol) {\n    if (password.includes(symbolSample)) {\n      return password;\n    } else {\n      return Generator(isCapital, isSymbol, passlength);\n    }\n  } else {\n    return password;\n  } //Judge includes capital, symbol\n\n}\n\n_c = Generator;\n\nfunction App() {\n  _s();\n\n  //State\n  const [state, setState] = useState([{\n    name: \"isCapital\",\n    value: true\n  }, {\n    name: \"isSymbol\",\n    value: true\n  }, {\n    name: \"passLength\",\n    value: 12\n  }]);\n  let password = Generator(state[0].value, state[1].value, state[2].value);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"div\",\n            sx: {\n              flexGrow: 1\n            },\n            children: \"Password Builder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-main\",\n      children: [/*#__PURE__*/_jsxDEV(Display, {\n        message: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CopyButton, {\n        msg: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controller, {\n      isCapital: state[0].value,\n      isSymbol: state[1].value,\n      textSize: state[2].value,\n      checkChange: handleValue => {\n        const newState = state.map(sta => sta.name === handleValue ? {\n          name: handleValue,\n          value: !sta.value\n        } : sta);\n        setState(newState);\n      },\n      sizeChange: handleValue => {\n        const newState = state.map(sta => sta.name === \"passLength\" ? {\n          name: \"passLength\",\n          value: handleValue\n        } : sta);\n        setState(newState);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"o+80lB9mQJg+VVNkYK2WfcjLlsE=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Generator\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/showt/OneDrive/ドキュメント/GitHub/Password-Builder/src/App.js"],"names":["Display","Controller","CopyButton","React","useState","AppBar","Toolbar","Typography","Generator","isCapital","isSymbol","passlength","symbol","capital","letter","symbolSample","Math","floor","random","length","capitalSample","password","Array","map","join","includes","App","state","setState","name","value","flexGrow","handleValue","newState","sta"],"mappings":"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","sourcesContent":["import './App.css';\r\nimport Display from './Display';\r\nimport Controller from './Controller';\r\nimport CopyButton from './CopyButton';\r\nimport React,{ useState } from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction Generator(isCapital=false,isSymbol=false,passlength=12){\r\n  const symbol=\"!#$%&()\";   //Symbol\r\n  const capital=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"; //Capital\r\n  const letter=isCapital&&isSymbol? \"abcdefghijklmnopqrstuvwxyz0123456789\"+symbol+capital\r\n              :isCapital? \"abcdefghijklmnopqrstuvwxyz0123456789\"+capital\r\n              :isSymbol ? \"abcdefghijklmnopqrstuvwxyz0123456789\"+symbol\r\n              :\"abcdefghijklmnopqrstuvwxyz0123456789\"\r\n        //To prepare using letters\r\n\r\n  const symbolSample=symbol[Math.floor(Math.random()*symbol.length)]; //To judge includes symbol\r\n  const capitalSample=capital[Math.floor(Math.random()*capital.length)];  //To judge includes capital\r\n\r\n  let password=[...Array(passlength)].map(()=>letter[Math.floor(Math.random()*letter.length)]).join(\"\");  //Make password\r\n\r\n  if(isCapital && isSymbol){\r\n    if(password.includes(capitalSample) && password.includes(symbolSample)){\r\n      return password;\r\n    }else{\r\n      return Generator(isCapital,isSymbol,passlength);\r\n    }\r\n  }else if(isCapital){\r\n    if(password.includes(capitalSample)){\r\n      return password;\r\n    }else{\r\n      return Generator(isCapital,isSymbol,passlength);\r\n    }\r\n  }else if(isSymbol){\r\n    if(password.includes(symbolSample)){\r\n      return password;\r\n    }else{\r\n      return Generator(isCapital,isSymbol,passlength);\r\n    }\r\n  }else{\r\n    return password;\r\n  }\r\n  //Judge includes capital, symbol\r\n}\r\n\r\nfunction App() {\r\n  //State\r\n  const[state,setState]=useState([\r\n    {\r\n      name:\"isCapital\",\r\n      value:true\r\n    },\r\n    {\r\n      name:\"isSymbol\",\r\n      value:true\r\n    },\r\n    {\r\n      name:\"passLength\",\r\n      value:12\r\n    }\r\n  ])\r\n\r\n  let password=Generator(state[0].value,state[1].value,state[2].value);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            Password Builder\r\n          </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </header>\r\n      <div className=\"App-main\">\r\n      <Display message={password}/>\r\n      <CopyButton msg={password}/>\r\n      </div>\r\n      <Controller isCapital={state[0].value} isSymbol={state[1].value} textSize={state[2].value}\r\n        checkChange={handleValue=>{\r\n          const newState=state.map(sta=>\r\n            sta.name===handleValue \r\n              ? {name:handleValue, value:!sta.value} \r\n              : sta\r\n            );\r\n            setState(newState);\r\n        }}\r\n        sizeChange={handleValue=>{\r\n          const newState=state.map(sta=>\r\n            sta.name===\"passLength\"\r\n              ?{name:\"passLength\",value:handleValue}\r\n              :sta\r\n            );\r\n            setState(newState);\r\n        }}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}